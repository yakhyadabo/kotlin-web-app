buildscript {
  ext.kotlin_version = '1.1.4'
  ext.junit_version = '4.11'
  ext.jooq_version = '3.10.0'

  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    //classpath 'nu.studer:gradle-jooq-plugin:2.0.7'
    classpath 'org.jooq:jooq:3.10.0'
    classpath 'org.jooq:jooq-meta:3.4.2'
    classpath "org.jooq:jooq-codegen:3.10.0"
  }
}

plugins {
  id 'nu.studer.jooq' version '2.0.9'
}

repositories {
  mavenCentral()
}

dependencies {
  testCompile  "junit:junit:$junit_version"
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  compile project(':kotlin-domain')
  jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'
}

apply plugin: 'nu.studer.jooq'

// See : https://github.com/etiennestuder/gradle-jooq-plugin

jooq {
  version = '3.10.0'
  edition = 'OSS'
  sample(sourceSets.main) {
    jdbc {
      driver = 'org.postgresql.Driver'
      url = 'jdbc:postgresql://localhost:5432/iris-db'
      user = 'iris-user'
      password = 'iris-password'
/*      properties {
        property {
          key = 'ssl'
          value = 'true'
        }
      }*/
    }
    generator {
      name = 'org.jooq.util.DefaultGenerator'
      strategy {
        name = 'org.jooq.util.DefaultGeneratorStrategy'
        // ...
      }
      database {
        name = 'org.jooq.util.postgres.PostgresDatabase'
        inputSchema = 'public'
        forcedTypes {
          forcedType {
            name = 'varchar'
            expression = '.*'
            types = 'JSONB?'
          }
          forcedType {
            name = 'varchar'
            expression = '.*'
            types = 'INET'
          }
        }
        // ...
      }
      generate {
        relations = true
        deprecated = false
        records = true
        immutablePojos = true
        fluentSetters = true
        // ...
      }
      target {
        packageName = 'nu.studer.sample'
        directory = 'kotlin-repository/src/main/generated'
      }
    }
  }
}